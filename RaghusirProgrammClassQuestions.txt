%windir%\System32\dialer.exe
1 wrjap to read two integer value from the user and perform all arithmetic operation;
2 wrjap to read the Rediance of circle from the user and print the area and circumfrance.
3 wrjap to read one integer value from the user and print positive format
4 wrjap to calculate simple interest.
5 wrjap to read the temp in terms of cal convert into faranhite and print.
6 read 2 Double value from the user and print all arithmetic operation.
7 write a java program to read the Amount from the user and print the dimensions of the amount.
8 wrt a java program to read two integer value from the user and print biggest value among them.
9 write a java program to print user entered number is special 2 digit or not.
10 write a java program to print user entered number is positive or negative.
11 write a java program to print user entred number is equal or not.
12 write a java program to print to print biggest among using if else.
13 write a java program to print to print user entred number is even or odd.
14 write a java program to print  to read the age of user and print is eligible to vote or not.
15 write a java program to print  to read 4 subject from the user and print the result either pass or fail.
16 write a java program to print  to read one integer value from the user and print that integer is digit or number.
16 write a java program to print  to read month number from the user and print that month number is valid or not.
Write a program to read one integer value from the print integer read digit or not.
17 write a java program to   to read month number from the user and print crosponding how many days in the month.
18 write a Java program to read year from the user and print that year is leap year or not.
19 write a Java program to read 3 integer value from the user and print the smallest among those 3.
20 write a Java program to read one integor value from the user and print it is 2 digit number or not.
21 write a Java program to read 3 integer value from the user and print the middle value.
22 write a Java program to read the month number from the user and print cross ponding month name.
23 write a Java program to read one integer value from the user and print sanju if number is divisible by 3 print Geeta if number is divisible by 5 print sanju weds geetha if number is divisible by 3 and 5 otherwise print breakup.
24 write Java program to read 4 marks of student and print the result in distinction first class second class fail or pass.
25 write a Java program to check user Enter number is perfect number or not.
26 write a Java program to calculate the factorial of n.
27 write Java program to calculate the sum of n natural number.
28 write a Java program to calculate the sum of even number or odd number with n.
29 write a Java program to print all even number between one to n.
30 write a Java program to print all odd number between one to n.
31 write a Java program to print all the number between N to 1.
32 write a Java program to print how many divisers are there for n .
33 write a Java program to print all the divisers for n.
34 write a Java program to print the multiple of 3 of n.
35 write a Java program to calculate the sum of digits in number.
36 write a Java program to count how many prime digits present in the number.
Write a Java program to check user in Armstrong or not.
37 write a Java program print how many even digit and odd digit persent in the number.
38 write a java program to calculate the sum of square of digits.
39 write a java program to calculate the product of its digit. 
40 write a program to calculate the sum of event digit and sum of odd digit.
41 write a program to calculate the how many 0 present in the number
42 write a Java program to reverse the number.
43 write a program check user Enter number is palindrome or not . 
44 write a Java program to define a method to written factorial of n.
45 define a method to calculate sum of digits .
46 write a Java program to define a method to return product of digit.
47 write is Java program define a method to return sum of fast n natural number.
48 define a method to return true if  the number is perfect otherwise return false.
49 define a method to write how many deviser are there for n.
50 define a method to return how many digits present in number.
51 define a method to return true if the number is strong number otherwise return false.
52 define a method to return n the power P.
53 define a method to return true if the number is Armstrong otherwise return false.
Define a method to return true if the number is happy otherwise return false.
[ happy number definition sum of square of its digit until become digit last one or 7};
54 write a Java program to define a method to return to true if the  number is diserium other wise return false.
55 define a method to return xylom if the number is xylom otherwise return pholame.
56 write a Java program to print all the prime number with in 100.
57 define a method to return how many prime number present in n.
58 define a method to return sum of prime number with in n.
59 define a method to print first n prime number.
60 write a Java program to print all perfect number with in n.
61 write a Java program to print all 3 digit palindrome number.
62 count how many Armstrog number with in n.
63 count how many special 2 digit number present in 100.
64  print first n Diserium number.
65 define a method to convert decimal to binary.
66 define a method to convert decimal to octal.
67 define a method to convert decimal to hexa.
68 define a method to convert binary to  decimal.
69 define a method to convert octal to decimal.
70 define a method to convert hexa to decimal.
71 write a Java program to print Fibonacci number with n.
72 n Fibonacci number with in n.
73 define a method to return the number n Fibonacci number.
74 
Pattern Questions->

1->
* * * * * 
* * * * * 
* * * * * 
* * * * *
* * * * * 
2->
*
* *
* * *
* * * * 
* * * * *
3->
* * * * *
* * * * 
* * *
* * 
*
4->
1 2 3 4 5
1 2 3 4 5 
1 2 3 4 5 
1 2 3 4 5 
1 2 3 4 5 
5->
1
1 2 
1 2 3
1 2 3 4
1 2 3 4 5
6->
A
A B
A B C
A B C D
A B C D E
7->
1 0 1 0 1
1 0 1 0 1
1 0 1 0 1
1 0 1 0 1
1 0 1 0 1
8->
5 4 3 2 1
5 4 3 2 1
5 4 3 2 1
5 4 3 2 1
5 4 3 2 1
9->
1
2 1 
3 2 1 
4 3 2 1 
5 4 3 2 1
10->
1 
1 0
1 0 1
1 0 1 0
1 0 1 0 1
11->

5 5 5 5 5
4 4 4 4 4 
3 3 3 3 3 
2 2 2 2 2
1 1 1 1 1
12->
1 1 1 1 1
0 0 0 0 0
1 1 1 1 1
0 0 0 0 0
1 1 1 1 1
13->
5 4 3 2 1 
4 3 2 1 
3 2 1 
2 1 
1
14->
1 0 1 0 1
1 0 1 0
1 0 1
1 0
1
15->
1 2 3 4 5
2 3  4 5
3 4 5
4 5
5
16->
a b c d e 
b c d e 
c d e 
e
17->
1 2 3 4 5
6 7 8 9 1
2 3 4 5 6
7 8 9 1 2
3 4 5 6 7
18->
1 0 1 0 1
0 1 0 1 0
1 0 1 0 1
0 1 0 1 0
1 0 1 0 1
19->
    * 
   * * 
  * * * 
 * * * * 
* * * * * 
  
20
*********
*********
*********
*********
*********
21->

    * 
   * * * 
  * * * * * 
 * * * * * * * 
* * * * * * * * *  	     
  22->
     
     1 
   1 0 1 
  1 0 1 0 1 
 1 0 1 0 1 0 1 
1 0 1 0 1 0 1 0 1 

23->

     1 
   1 2 1 
  1 2 3 2 1 
 1 2 3 4 3 2 1 
1 2 3 4 5 4 3 2 1 

24->
     1 
   1 * 2 
  1 * 2 * 3 
 1 * 2 * 3 * 4 
1 * 2 * 3 * 4 * 5 
25->
    1
   21
  321
 4321
54321
26->
     1 
   0 0 0 
  1 1 1 1 1 
 0 0 0 0 0 0 0 
1 1 1 1 1 1 1 1 1 

27->
     1 
   2 1 2 
  3 2 1 2 3 
 4 3 2 1 2 3 4 
5 4 3 2 1 2 3 4 5 

28->
     1 
   0 1 0 
  1 0 1 0 1 
 0 1 0 1 0 1 0 
1 0 1 0 1 0 1 0 1 

29->

     a 
   a b c 
  a b c d e 
 a b c d e f g 
a b c d e f g h i 

30->
* * * * * * * * * 
 * * * * * * * 
  * * * * * 
   * * * 
    * 

31->

1 2 3 4 5 
 2 3 4 5 
  3 4 5 
   4 5 
    5 
32->
5 4 3 2 1 
 4 3 2 1 
  3 2 1 
   2 1 
    1   
 33->
5 4 3 2 1 2 3 4 5 
 4 3 2 1 2 3 4 
  3 2 1 2 3 
   2 1 2 
     1    
34->
     1 
   1 2 1 
  1 2 3 2 1 
 1 2 3 4 3 2 1 
1 2 3 4 5 4 3 2 1 
35->

     1 
   1 0 1 
  1 0 1 0 1 
 1 0 1 0 1 0 1 
1 0 1 0 1 0 1 0 1 
36->

     A 
   B A B 
  C B A B C 
 D C B A B C D 
E D C B A B C D E 

37->
   *
  * * *
 * * * * *
* * * * * * *
 * * * * *
  * * *
    *


* * * * * * * * * 
 * * * * * * * 
  * * * * * 
   * * * 
    * 
   * * * 
  * * * * * 
 * * * * * * * 
* * * * * * * * * 
38->
1 2 3 4 3 2 1 
 2 3 4 3 2 
  3 4 3 
   4 
  3 4 3 
 2 3 4 3 2 
1 2 3 4 3 2 1 
39->

    1 
  2 1 2 
 3 2 1 2 3 
4 3 2 1 2 3 4 
 3 2 1 2 3 
  2 1 2 
    1 

40->

1 2 3 4 3 2 1 
 1 2 3 2 1 
  1 2 1 
    1 
  1 2 1 
 1 2 3 2 1 
1 2 3 4 3 2 1 

41->
4 3 2 1 2 3 4 
 3 2 1 2 3 
  2 1 2 
    1 
  2 1 2 
 3 2 1 2 3 
4 3 2 1 2 3 4 

42->

    1 
  1 2 1 
 1 2 3 2 1 
1 2 3 4 3 2 1 
 1 2 3 2 1 
  1 2 1 
    1 
 43->
* * * * * * * 
* *       * * 
*   *   *   * 
*     *     * 
*   *   *   * 
* *       * * 
* * * * * * * 
44->
* * * * * * * 
*     *     * 
*     *     * 
* * * * * * * 
*     *     * 
*     *     * 
* * * * * * * 
45->
    * 
  *   * 
 *       * 
*          * 
 *       * 
  *   * 
    *    
46->

 *    *     * 
  *   *   *   
    * * *     
* * * * * * * 
    * * *     
  *   *   *   
*     *     *    
 47->
 
*           * 
* *       * * 
*   *   *   * 
*     *     * 
*           * 
*           * 
*           * 
    
48->
    
*           * 
*           * 
*           * 
*     *     * 
*   *   *   * 
* *       * * 
*           *     






